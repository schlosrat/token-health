{
  "TOKEN_HEALTH.Amount": "Amount",
  "TOKEN_HEALTH.Dialog_Heal_Title": "Heal $1",
  "TOKEN_HEALTH.Dialog_Heal_Title_targeted": "Heal $1",
  "TOKEN_HEALTH.Dialog_Damage_Title": "Deal damage to $1",
  "TOKEN_HEALTH.Dialog_Damage_Title_targeted": "Deal damage to $1",
  "TOKEN_HEALTH.Dialog_Help": "Enter the number of points to apply. Using negative numbers will cause damage to be healing and vice versa.",
  "TOKEN_HEALTH.Dialog_Penetration_Help": "Setting Damage Type to 'Penetrating' will bypass damage mitigation (has no effect on healing).",
  "TOKEN_HEALTH.Heal": "Apply as Healing",
  "TOKEN_HEALTH.Damage": "Apply as Damage",
  "TOKEN_HEALTH.toggleKeyName": "Damage Selected Tokens",
  "TOKEN_HEALTH.toggleKeyHint": "Will display a dialog to enter damage for selected tokens",
  "TOKEN_HEALTH.toggleKeyAltName": "Heal Selected Tokens",
  "TOKEN_HEALTH.toggleKeyAltHint": "Will display a dialog to enter healing for selected tokens",
  "TOKEN_HEALTH.toggleKeyTargetName": "Damage Targeted Tokens",
  "TOKEN_HEALTH.toggleKeyTargetHint": "Will display a dialog to enter damage for targeted tokens",
  "TOKEN_HEALTH.toggleKeyTargetAltName": "Heal Targeted Tokens",
  "TOKEN_HEALTH.toggleKeyTargetAltHint": "Will display a dialog to enter healing for targeted tokens",
  "TOKEN_HEALTH.toggleNumpadKeyName": "Damage Selected Tokens (numpad)",
  "TOKEN_HEALTH.toggleNumpadKeyHint": "Will display a dialog to enter damage for selected tokens (numpad)",
  "TOKEN_HEALTH.toggleNumpadKeyAltName": "Heal Selected Tokens (numpad)",
  "TOKEN_HEALTH.toggleNumpadKeyAltHint": "Will display a dialog to enter healing for selected tokens (numpad)",
  "TOKEN_HEALTH.toggleNumpadKeyTargetName": "Damage Targeted Tokens (numpad)",
  "TOKEN_HEALTH.toggleNumpadKeyTargetHint": "Will display a dialog to enter damage for targeted tokens (numpad)",
  "TOKEN_HEALTH.toggleNumpadKeyTargetAltName": "Heal Targeted Tokens (numpad)",
  "TOKEN_HEALTH.toggleNumpadKeyTargetAltHint": "Will display a dialog to enter healing for targeted tokens (numpad)",
  "TOKEN_HEALTH.damageTypeLabel": "Type",
  "TOKEN_HEALTH.damageType1": "Primary Damage Type (optional)",
  "TOKEN_HEALTH.damageType1Hint": "Default damage type - leave blank if only one type of damage is possible",
  "TOKEN_HEALTH.damageType2": "Secondary Damage Type (optional)",
  "TOKEN_HEALTH.damageType2Hint": "Leave blank if only one type of damage is possible",
  "TOKEN_HEALTH.damageType3": "Tertiary Damage Type (optional)",
  "TOKEN_HEALTH.damageType3Hint": "Leave blank if not applicable. Use 'Penetrating' to bypass all damage mitiagation (defined below).",
  "TOKEN_HEALTH.mitigation1": "Mitigation Source 1 (optional)",
  "TOKEN_HEALTH.mitigation1Hint": "Applies to all types of damage. Leave blank if there is no damage mitigation in your system",
  "TOKEN_HEALTH.mitigation2": "Mitigation Source 2 (optional)",
  "TOKEN_HEALTH.mitigation2Hint": "Applies to primary damage type. Leave blank if there is no damage mitigation in your system",
  "TOKEN_HEALTH.mitigation3": "Mitigation Source 3 (optional)",
  "TOKEN_HEALTH.mitigation3Hint": "Applies to primary & secondary damage types. Leave blank if there is no damage mitigation in your system",
  "TOKEN_HEALTH.damageSubtype1": "Primary Damage Subtype (optional)",
  "TOKEN_HEALTH.damageSubtype1Hint": "Leave blank if all damage applies to the same resource pool with the same rules",
  "TOKEN_HEALTH.hp1": "Primary Health Pool (required)",
  "TOKEN_HEALTH.hpMax1": "Max 1st Health Pool (required)",
  "TOKEN_HEALTH.altHpMax1": "Additional 1st Health Pool (optional)",
  "TOKEN_HEALTH.altHpMax1Hint": "Leave blank if no additional Health pool",
  "TOKEN_HEALTH.tempHp1": "Temporary 1st Health Pool (optional)",
  "TOKEN_HEALTH.tempHpHint": "Leave this empty if there is no temp HP management in your system",
  "TOKEN_HEALTH.damageSubtype2": "Secondary Damage Type (optional)",
  "TOKEN_HEALTH.damageSubtype2Hint": "Leave blank if all damage applies to the same resource pool with the same rules",
  "TOKEN_HEALTH.hp2": "Secondary Health Pool (*)",
  "TOKEN_HEALTH.hpHint": "(*) Required if Secondary Damage Type defined, otherwise optional - may be same as primary",
  "TOKEN_HEALTH.hpMax2": "Max 2nd Health Pool (*)",
  "TOKEN_HEALTH.altHpMax2": "Additional 2nd Health Pool (optional)",
  "TOKEN_HEALTH.altHpMax2Hint": "Leave blank if no additional 2nd Health pool",
  "TOKEN_HEALTH.tempHp2": "Temporary 2nd Health Pool (optional)",
  "TOKEN_HEALTH.allowNegative": "Allow Negative Hit Points",
  "TOKEN_HEALTH.allowNegativeHint": "Some systems allow negative hit points (e.g. PF1)",
  "TOKEN_HEALTH.koThreshold": "Threshold for Unconscious (optional)",
  "TOKEN_HEALTH.koThresholdHint": "HP value at which player/npc is unconscious - may only be negative if Allow Negative Hit Points is set",
  "TOKEN_HEALTH.deathThreshold": "Threshold for Dying (optional)",
  "TOKEN_HEALTH.deathThresholdHint": "HP value at which player/npc is dying or dead - may only be negative if Allow Negative Hit Points is set",
  "TOKEN_HEALTH.allowDamageBuyoff": "Allow Damage Buyoff - AGE Games",
  "TOKEN_HEALTH.allowDamageBuyoffHint": "Some AGE games allow buyoff of excess damage (e.g. Modern AGE, The Expanse, etc.)",
  "TOKEN_HEALTH.enableTokenImages": "Enable Token Images in Dialog",
  "TOKEN_HEALTH.enableTokenImagesHint": "Enabling this will allow up to four token thumbnail images (fourth is cut off) to be displayed in the dialog box",
  "TOKEN_HEALTH.enableConditions": "Set Token Conditions - AGE Games",
  "TOKEN_HEALTH.enableConditionsHint": "Enabling this will allow Token Health to set token conditions based on damage applied - AGE System Specific",
  "TOKEN_HEALTH.damageAdds": "Additive Damage",
  "TOKEN_HEALTH.damageAddsHint": "Enable this for systems where damage accumulates rather than subtracting from current health",
  "TOKEN_HEALTH.enableTokenChat": "Enable Token Chat",
  "TOKEN_HEALTH.enableTokenChatHint": "Enabling this will cause chat messages to be generated by affected tokens",
  "TOKEN_HEALTH.tokenChatHint": "Chat text to display from token",
  "TOKEN_HEALTH.tokenChatHintGM": "Chat text to display from token (sent to GM Only)",
  "TOKEN_HEALTH.harmName": "When Damage Done",
  "TOKEN_HEALTH.ouch": "You hit me!",
  "TOKEN_HEALTH.minorDamageName": "Minimal Damage",
  "TOKEN_HEALTH.damagePoint": "For one measly point of damage...",
  "TOKEN_HEALTH.damageName": "Points of Damage",
  "TOKEN_HEALTH.damagePoints": "points of damage",
  "TOKEN_HEALTH.healName": "When Healing Applied",
  "TOKEN_HEALTH.ty": "Oooo! Thank you!",
  "TOKEN_HEALTH.minorHealingName": "Minimal Healing",
  "TOKEN_HEALTH.healingPoint": "For one measly point of healing...",
  "TOKEN_HEALTH.HealingName": "Points of Healing",
  "TOKEN_HEALTH.healingPoints": "points of healing",
  "TOKEN_HEALTH.noEffectName": "No Effect (Healing or Damge)",
  "TOKEN_HEALTH.meh": "Meh! Not impressed...",
  "TOKEN_HEALTH.whenUnconcious": "Recipient Becomes Unconcious",
  "TOKEN_HEALTH.whenUnconciousHint": "Chat text to display from token - leave blank if not applicable to system",
  "TOKEN_HEALTH.unconscious": "I feel so sleepy...",
  "TOKEN_HEALTH.whenInjured": "Recipient Becomes Injured",
  "TOKEN_HEALTH.injured": "Ouch! That hurt!",
  "TOKEN_HEALTH.whenWounded": "Recipient Becomes Wounded",
  "TOKEN_HEALTH.wounded": "Dang! That really hurt!",
  "TOKEN_HEALTH.whenDying": "Recipient Dies",
  "TOKEN_HEALTH.dying": "Goodbye cruel world!",
  "TOKEN_HEALTH.whenDead": "Recipient is Already Dead",
  "TOKEN_HEALTH.dead": "Hey! Don't beat a dead horse!"
}
